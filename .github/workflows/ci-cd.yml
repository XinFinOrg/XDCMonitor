name: XDC Monitor CI/CD

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run linting
        run: yarn lint

      - name: Run tests
        run: yarn test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build application
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

      - name: Build Docker image
        run: docker build -t xdc-monitor:${{ github.sha }} .

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        if: github.event_name != 'pull_request'
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/xdc-monitor

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention for main branch
          [ "$VERSION" == "main" ] && VERSION=latest
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag xdc-monitor:${{ github.sha }} $IMAGE_ID:$VERSION
          docker tag xdc-monitor:${{ github.sha }} $IMAGE_ID:${{ github.sha }}
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:${{ github.sha }}

  deploy:
    needs: build
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        run: echo "Add your deployment steps here. Could use SSH to deploy to server or deploy to a cloud service."
        # Example deployment step (commented out):
        # - name: Deploy to server
        #   uses: appleboy/ssh-action@master
        #   with:
        #     host: ${{ secrets.SSH_HOST }}
        #     username: ${{ secrets.SSH_USERNAME }}
        #     key: ${{ secrets.SSH_PRIVATE_KEY }}
        #     script: |
        #       cd /path/to/deploy
        #       docker-compose down
        #       docker-compose pull
        #       docker-compose up -d
